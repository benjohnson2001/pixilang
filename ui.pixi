UI_MAX_RADIO_SIZE = 16

fn UI() {
    $ui = new()

    $ui.box_brd = $1
    $ui.box_pad = $2
    $ui.evt_pad = $3

    $ui.elements = -1

    // methods

    $ui.set_element_color = {
        $ui = $1
        $el = $2
        $color = $3

        clean($el, $color)
        op_cn(OP_COPY, $el, $el.parent.color, $ui.box_brd, $ui.box_brd, $el.w - 2 * $ui.box_brd, $el.h - 2 * $ui.box_brd)
        $el.color = $color
    }
    $ui.draw = {
        $ui = $1

        fn draw_list($elements) {
            $el = $elements.Head
            if $elements.Tail > -1 {
                draw_list($elements.Tail)
            }
            $gfx = clone($el)
            pixi($gfx, $el.x, $el.y)
            remove($gfx)
        }

        draw_list($ui.elements)
    }

    $ui.evt_listen = {
        $ui = $1

        $type = EVT[EVT_TYPE]
        $key = EVT[EVT_KEY]

        $redraw = 0
        if
            ($type == EVT_MOUSEMOVE && $key == KEY_MOUSE_LEFT)
            || $type == EVT_TOUCHMOVE
        {
            $redraw = $ui.evt_dispatch($ui, "evt_drag")
        }

        if
            ($type == EVT_MOUSEBUTTONDOWN && $key == KEY_MOUSE_LEFT)
            || $type == EVT_TOUCHBEGIN
        {
            $redraw = $ui.evt_dispatch($ui, "evt_click")
        }

        if
            ($type == EVT_MOUSEBUTTONUP && $key == KEY_MOUSE_LEFT)
            || $type == EVT_TOUCHEND
        {
            $redraw = $ui.evt_dispatch($ui, "evt_release")
        }

        ret ($redraw)
    }

    $ui.evt_dispatch = {
        $ui = $1
        $evt = $2

        $redraw = 0
        $elements = $ui.elements
        while $elements.Head > 0 {
            $el = $elements.Head
            $elements = $elements.Tail

            $x0 = EVT[EVT_X]
            $y0 = EVT[EVT_Y]

            if $x0 >= $el.x - $el.parent.x - $el.w / 2 - $ui.evt_pad
            && $x0 <= $el.x - $el.parent.x + $el.w / 2 + $ui.evt_pad
            && $y0 >= $el.y - $el.parent.y - $el.h / 2 - $ui.evt_pad
            && $y0 <= $el.y - $el.parent.y + $el.h / 2 + $ui.evt_pad {

                $dx = -($el.x - $el.parent.x - $el.w / 2 - $x0) / $el.w
                $dy = 1 + ($el.y - $el.parent.y - $el.h / 2 - $y0) / $el.h
                $dz = EVT[EVT_PRESSURE] / 1024

                if $dx < 0 {$dx = 0}
                if $dx > 1 {$dx = 1}
                if $dy < 0 {$dy = 0}
                if $dy > 1 {$dy = 1}

                get_prop($el, $evt)($el, $dx, $dy, $dz)
                $redraw = 1
            }
        }

        ret ($redraw)
    }

    // elements

    $ui.Screen = {
        $ui = $1
        $el = get_screen()
        $ui.screen = $el

        $w = get_xsize($el)
        $h = get_ysize($el)

        $el.x = 0
        $el.y = 0
        $el.w = $w
        $el.h = $h
        $el.color = #000000

        ret ($el)
    }

    $ui._box = {
        $ui = $1
        $parent = $2
        $x = $3
        $y = $4
        $w = $5
        $h = $6
        $color = $7

        $el = new($w, $h)

        $el.x = $x + ($w - $parent.w) / 2 + $parent.x
        $el.y = $y + ($h - $parent.h) / 2 + $parent.y
        $el.w = $w
        $el.h = $h
        $el.parent = $parent
        $el.ui = $ui

        $ui.set_element_color($ui, $el, $color)

        $el.set = {}
        $el.evt_click = {}
        $el.evt_release = {}
        $el.evt_drag = {}

        ret ($el)
    }

    $ui.Radio = {
        $ui = $1

        $radio = new(UI_MAX_RADIO_SIZE, INT16)
        clean($radio, -1)

        $radio.add = {
            $radio = $1
            $el = $2

            copy($radio, $radio, 1, 0)
            $radio[0] = $el
            $el.radio = $radio
        }

        ret ($radio)
    }

    $ui.Canvas = {
        $ui = $1
        $el = $ui._box($ui, $2, $3, $4, $5, $6, $7)
        $ui.elements = _($el, $ui.elements)

        ret ($el)
    }

    $ui.Push = {
        $ui = $1
        $el = $ui._box($ui, $2, $3, $4, $5, $6, $7)
        $ui.elements = _($el, $ui.elements)

        $el.val = 0

        $el.evt_click = {
            $el = $1
            $el.set($el, 1)
        }

        $el.evt_release = {
            $el = $1
            $el.set($el, 0)
        }

        $el.set = {
            $el = $1
            $val = $2

            $ui = $el.ui
            $el.val = $val

            if $val > 0 {
                op_cn(OP_COPY, $el, $el.color, $ui.box_pad, $ui.box_pad, $el.w - 2 * $ui.box_pad, $el.h - 2 * $ui.box_pad)
            } else {
                op_cn(OP_COPY, $el, $el.parent.color, $ui.box_pad, $ui.box_pad, $el.w - 2 * $ui.box_pad, $el.h - 2 * $ui.box_pad)
            }
        }

        ret ($el)
    }

    $ui.Toggle = {
        $ui = $1
        $el = $ui._box($ui, $2, $3, $4, $5, $6, $7)
        $ui.elements = _($el, $ui.elements)

        $el.evt_click = {
            $el = $1
            $el.val = 1 - $el.val
            $ui = $el.ui

            if $el.radio > 0 {
                $i = 0 while $i < UI_MAX_RADIO_SIZE {
                    if $el.radio[$i] == -1 {
                        break
                    }
                    if $el == $el.radio[$i] {
                        $el.set($el, 1)
                    } else {
                        $el0 = $el.radio[$i]
                        $el0.set($el0, 0)
                    }

                    $i + 1
                }
            } else {
                $el.set($el, $el.val)
            }
        }

        $el.set = {
            $el = $1
            $el.val = $2
            $ui = $el.ui

            if $el.val > 0 {
                op_cn(OP_COPY, $el, $el.color, $ui.box_pad, $ui.box_pad, $el.w - 2 * $ui.box_pad, $el.h - 2 * $ui.box_pad)
            } else {
                op_cn(OP_COPY, $el, $el.parent.color, $ui.box_pad, $ui.box_pad, $el.w - 2 * $ui.box_pad, $el.h - 2 * $ui.box_pad)
            }
        }

        $el.set($el, 0)
        ret ($el)
    }

    $ui.VSlider = {
        $ui = $1
        $el = $ui._box($ui, $2, $3, $4, $5, $6, $7)
        $ui.elements = _($el, $ui.elements)

        $el.evt_click = {
            $el = $1
            $dx = $2
            $dy = $3
            $el.set($el, $dy)
        }

        $el.evt_drag = {
            $1.evt_click($1, $2, $3)
        }

        $el.set = {
            $el = $1
            $el.val = $2
            $ui = $el.ui

            $dy = 1 - $el.val

            op_cn(OP_COPY, $el, $el.color, $ui.box_pad, $dy * $el.h + $ui.box_pad, $el.w - 2 * $ui.box_pad, $el.h - $dy * $el.h - 2 * $ui.box_pad)
            op_cn(OP_COPY, $el, $el.parent.color, $ui.box_pad, $ui.box_pad, $el.w - 2 * $ui.box_pad, $dy * $el.h - 2 * $ui.box_pad)
        }

        $el.set($el, 0)
        ret ($el)
    }

    $ui.HSlider = {
        $ui = $1
        $el = $ui._box($ui, $2, $3, $4, $5, $6, $7)
        $ui.elements = _($el, $ui.elements)

        $el.val = 0

        $el.evt_click = {
            $el = $1
            $dx = $2
            $dy = $3
            $el.set($el, $dx)
        }

        $el.evt_drag = {
            $1.evt_click($1, $2, $3)
        }

        $el.set = {
            $el = $1
            $dx = $2
            $ui = $el.ui

            $el.val = $dx

            op_cn(OP_COPY, $el, $el.parent.color, $dx * $el.w + $ui.box_pad, $ui.box_pad, $el.w - $dx * $el.w - 2 * $ui.box_pad, $el.h - 2 * $ui.box_pad)
            op_cn(OP_COPY, $el, $el.color, $ui.box_pad, $ui.box_pad, $dx * $el.w - 2 * $ui.box_pad, $el.h - 2 * $ui.box_pad)
        }

        $el.set($el)
        ret ($el)
    }

    $ui.Pad = {
        $ui = $1
        $el = $ui._box($ui, $2, $3, $4, $5, $6, $7)
        $ui.elements = _($el, $ui.elements)

        $el.val_x = 0
        $el.val_y = 0
        $el.val_z = 0

        $el.evt_click = {
            $el = $1
            $dx = $2
            $dy = $3
            $dz = $4

            $el.set($el, $dx, $dy, $dz)
        }

        $el.evt_release = {
            $el = $1
            $dx = $2
            $dy = $3
            $dz = $4

            $el.set($el, $dx, $dy, 0)
        }


        $el.evt_drag = {
            $1.evt_click($1, $2, $3, $4)
        }

        $el.set = {
            $el = $1
            $el.val_x = $2
            $el.val_y = $3
            $el.val_z = $4

            $ui = $el.ui

            $dx = $el.val_x
            $dy = 1 - $el.val_y
            $dz = $el.val_z

            op_cn(OP_COPY,
                $el,
                $el.parent.color,
                $ui.box_brd,
                $ui.box_brd,
                $el.w - 2 * $ui.box_brd,
                $el.h - 2 * $ui.box_brd
            )

            op_cn(OP_COPY, $el, $el.color, $dx * $el.w, $ui.box_brd, $ui.box_brd, $el.h - 2 * $ui.box_brd)
            op_cn(OP_COPY, $el, $el.color, $ui.box_brd, $dy * $el.h, $el.w - 2 * $ui.box_brd, $ui.box_brd)
        }

        $el.set($el)
        ret ($el)
    }

    ret ($ui)
}


